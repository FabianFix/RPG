<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>text = "" // the text to display
text_speed = room_speed / 10 // 10 characters per second
skip_button = vk_enter

// initializing variables that are needed in the step and draw events:
text_displayed = "" // the text being displayed currently
text_length = -1 // will hold the amount of individual characters of the text string
index = 0 // the current position in the text
cooldown = text_speed


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// setting the text length if it hasn't been set yet
if (text_length &lt;= 0)
{
   // at this point, the "text" variable should hold the text we want to display
   text_length = string_length(text)
}

// check if the skip button was been pressed when the text is complete
if (keyboard_check_pressed(skip_button) &amp;&amp; index &gt;= text_length)
{
   instance_destroy()
}


// check if the skip button was pressed
if (keyboard_check_pressed(skip_button))
{
   text_displayed = text // show the full text at once
   index = text_length // prevents the next block from running
}

if (index &lt; text_length)
{
   cooldown-- // decrementing the cooldown.
  
   // only add characters when we're not finished
   if (cooldown &lt;= 0) // when the cooldown reaches 0
   {
       index++; // advance one character in the text
       text_displayed = string_copy(text, 1, index) // starting from the 1st char in "text" we the amount of "index" characters to the displayed_text
       cooldown = text_speed // resetting the cooldown for the next character
   }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// set anything you want for nice text rendering
draw_set_color(c_black)
draw_set_alpha(1)
draw_sprite(Text_Block_Spr, 0, 512, 693)
draw_text(240, 630, text_displayed)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
